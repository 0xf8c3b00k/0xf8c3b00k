#! /usr/bin/env node

// Command format:
// ./0xfb [Program option] <Command> [Command argument]

var CONFIG = require('./config.js').app_config();

// prog_command:
// Map command to module that run the command.
// Each module must has run() function. And the first argument of this
// function would be program option, while the second one would be
// command argument. Move to ./config.js ?
var progCommand = {
  // Post message
  'post' : './post.js',
  // Show albums
  'album' : './album.js',
  // Show news feed.
  'wall': './wall.js',
};

// Parse command line, collect program option, command, command argrment.
var initRun = function() {
  // [TODO] we can use Optimist to simplify command line arguments
  //        parse. Refer to:
  //          * https://github.com/substack/node-optimist
  //          * http://docs.nodejitsu.com/articles/command-line/how-to-parse-command-line-arguments

  var command = '';
  var cmd_argv = [];

  command = process.argv[2];
  cmd_argv = process.argv.slice(3);

  if (!progCommand.hasOwnProperty(command)) {
    // Invalid command.
    console.log('Available subcommand: %s',
                Object.keys(progCommand).join(', '));
    process.exit(1);
  }

  // Go. Here we are already got the command (in command).
  // If there's something must be processed before getting token.
  require('./server_auth.js').getAuthToken(
    function(access_token, expires) {
      require(progCommand[command]).run([], cmd_argv, process.argv);
    },
    function(msg) {
      console.error('Fail to auth, message: %s', msg);
    },
    false,  // Force?
    function(succ_cb, url) {
      console.log(url);
      succ_cb();
    }
  );
}

// *** Start with initRun() ***
initRun();
